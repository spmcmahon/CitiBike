Citibike Notes



Pre - Post pademic ridership patterns 


# look at generations: 

SELECT
  EXTRACT(year
  FROM
    starttime) AS year,
  COUNT(CASE
      WHEN birth_year>= 1940 AND birth_year < 1959 THEN 1
  END
    ) AS Boomer,
  COUNT(CASE
      WHEN birth_year>= 1960 AND birth_year < 1979 THEN 1
  END
    ) AS Gen_X,
  COUNT(CASE
      WHEN birth_year>= 1980 AND birth_year < 1994 THEN 1
  END
    ) AS Gen_Y,
  COUNT(CASE
      WHEN birth_year>= 1995 AND birth_year < 2012 THEN 1
  END
    ) AS Gen_Z
FROM
  `bigquery-public-data.new_york_citibike.citibike_trips`
GROUP BY
  year
HAVING 
  year is NOT NULL
ORDER BY
  year DESC



# look at popular routes 

SELECT
  start_station_id,
  end_station_id,
  COUNT(*) AS Trips_on_route
FROM
  `bigquery-public-data.new_york_citibike.citibike_trips`
WHERE
  (start_station_id != end_station_id) #or (start_station_id = end_station_id and tripduration > 300)
GROUP BY
  start_station_id,
  end_station_id
ORDER BY
  Trips_on_route DESC
LIMIT
  10



  import pandas as pd
df = pd.read_csv('example.csv')
df.to_parquet('output.parquet')



    
NYfolders = ['/Users/mcmahon/Repos/CitiBike/Stephanie/Data Files/NewYork/NY2017'
             '/Users/mcmahon/Repos/CitiBike/Stephanie/Data Files/NewYork/NY2018',
             '/Users/mcmahon/Repos/CitiBike/Stephanie/Data Files/NewYork/NY2019',
             '/Users/mcmahon/Repos/CitiBike/Stephanie/Data Files/NewYork/NY2019',
             '/Users/mcmahon/Repos/CitiBike/Stephanie/Data Files/NewYork/NY2020',
             '/Users/mcmahon/Repos/CitiBike/Stephanie/Data Files/NewYork/NY2021',
             '/Users/mcmahon/Repos/CitiBike/Stephanie/Data Files/NewYork/NY2022']




import random
import os

# extract all data files in "datasets" folder (contains downloaded .csvs for all months)
files = os.listdir("datasets")

df = pd.DataFrame()

# we will sample 50% of entries from each month
p = 0.50

# loop through all files, random sample entries, and append to the master dataframe
for file in files:

    df = df.append(pd.read_csv(f"datasets/{file}", skiprows=lambda i: i>0 and random.random() > p), ignore_index=True)

# save dataframe as csv
df.to_csv("citibike_compiled_data.csv", index=False)


 temp = temp.sample(frac=0.25, 
                           random_state=42, 
                           axis = 0, 
                           ignore_index= True)




distance to major transit

PATH (14th, 23rd, )

MNR (Grand Central, Penn, Harlem 125th)

LIRR (Penn, Atlantic, Jamaica)

Ferry terminals? 

Sports stadiums (Mets, Yankees, MSG, Barclays, Arthur Ash)