import numpy as npimport pandas as pdimport matplotlib.pyplot as pltimport seaborn as sns import featherimport osimport random from pathlib import Path# just a few sample months to look at #NY092017 = pd.read_csv('201709-citibike-tripdata.csv')#NY062021 = pd.read_csv('202106-citibike-tripdata.csv')#NY122021 = pd.read_csv('202112-citibike-tripdata.csv')#NY042019 = pd.read_csv('201904-citibike-tripdata.csv')def Col_rename(df):    for i in list(df.columns):        if i in ['starttime','started_at','Start Time']:            df.rename({i:'start_time'}, axis=1, inplace = True)        if i in ['member_casual','User Type','usertype']:            df.rename({i: 'user_type'}, axis =1, inplace = True)        if i in ['tripduration' , 'Trip Duration']:            df.rename({i: 'duration'}, axis =1, inplace = True)        if i in ['stoptime'  , 'Stop Time'  ,'ended_at']:            df.rename({i: 'end_time'}, axis =1, inplace = True)        if i in ['start station id',  'Start Station ID' ]:            df.rename({i: 'start_station_id'}, axis =1, inplace = True)        if i in ['start station name' , 'Start Station Name' ]:            df.rename({i: 'start_station_name'}, axis =1, inplace = True)        if i in ['start station latitude' , 'Start Station Latitude' ]:            df.rename({i: 'start_lat'}, axis =1, inplace = True)        if i in ['start station longitude', 'Start Station Longitude' ]:            df.rename({i: 'start_lng'}, axis =1, inplace = True)        if i in ['end station id' , 'End Station ID' ]:            df.rename({i: 'end_station_id'}, axis =1, inplace = True)        if i in ['end station name' ,'End Station Name']:            df.rename({i: 'end_station_name'}, axis =1, inplace = True)        if i in ['end station latitude'  ,'End Station Latitude']:            df.rename({i: 'end_lat'}, axis =1, inplace = True)        if i in ['end station longitude', 'End Station Longitude']:            df.rename({i: 'end_lng'}, axis =1, inplace = True)            def Col_to_dt(df):    df[["start_time", "end_time"]] = df[["start_time", "end_time"]].apply(pd.to_datetime)def Col_duration(df):    if 'duration' in list(df.columns):        df['duration'] = df['duration'].astype(float)    else:         df['duration'] = (df["end_time"] - df["start_time"]).astype('timedelta64[s]')        def Statid_to_string(df):    df['start_station_id'] = df['start_station_id'].astype(str)    df['end_station_id'] = df['end_station_id'].astype(str)    def User_binary(df):     user_dict = {'member': 1, 'casual': 0,                  'Subscriber': 1, 'Customer': 0,                  'subscriber': 1, 'customer': 0}    df['user_type'] = df['user_type'].map(user_dict)    df['user_type'].fillna(0, inplace=True)         # drop rows with missing end station   def Drop_end(df):    df = df.dropna(how='any', subset=['end_station_name', 'end_lng'], inplace = True)      # downsize memory for user_type and duration columns def Downsize_memory(df):     df['user_type'] = df['user_type'].astype('category')     df['duration'] = df['duration'].astype('int32')           # reorder columns and drop columns: birth year, gender, bikeid, rideid            def Col_reorder(df):        df = df[['start_time','end_time','duration',             'start_station_name','start_station_id',             'end_station_name','end_station_id',             'start_lat','start_lng', 'end_lat','end_lng', 'user_type']]    return df# make columms uniform & drop empty rows def clean_df(df):     Col_rename(df)    Col_to_dt(df)    Col_duration(df)    Statid_to_string(df)    User_binary(df)    Drop_end(df)    Downsize_memory(df)    df = Col_reorder(df)    return df# functions to convert all csvs in data folders to feathers def featherize(file):    print('Feathering ' + file)    newname = Path(file).stem + '.feather'    if Path(newname).is_file():        print('skipping')        return    df = pd.read_csv(file)    feather.write_dataframe(df, newname)    print('Created file: ' + newname)# featherize all files in NewYork folder NYfolders = '/Users/mcmahon/Repos/CitiBike/Stephanie/Data Files/NewYork/'for fold in sorted(os.listdir(NYfolders)):     fold = NYfolders + fold    print(fold)    if not Path(fold).is_dir():        continue    os.chdir(fold)    for file in os.listdir('.'):        print(file)        if '.csv' not in file:            continue        featherize(file)                                # process feather files: read in, clean, output clean feather def clean_file(file):    print('Cleaning ' + file)    df = pd.read_feather(file)    df = clean_df(df)    newname = Path(file).stem +'-clean.feather'    feather.write_dataframe(df, newname)    print('Created cleaned file: ' + newname)NYfolders1 = [    '/Users/mcmahon/Repos/CitiBike/Stephanie/Data Files/NewYork/NY2017',    '/Users/mcmahon/Repos/CitiBike/Stephanie/Data Files/NewYork/NY2018',                '/Users/mcmahon/Repos/CitiBike/Stephanie/Data Files/NewYork/NY2019',     '/Users/mcmahon/Repos/CitiBike/Stephanie/Data Files/NewYork/NY2020']          for fold in NYfolders1:     print(fold)    if not Path(fold).is_dir():        continue    os.chdir(fold)    for file in os.listdir('.'):        print(file)        if '.feather' not in file:            continue        clean_file(file)# NYfolders2 =[#              '/Users/mcmahon/Repos/CitiBike/Stephanie/Data Files/NewYork/NY2021',#              '/Users/mcmahon/Repos/CitiBike/Stephanie/Data Files/NewYork/NY2022']# NYfolders3 = ['/Users/mcmahon/Repos/CitiBike/Stephanie/Data Files/NewYork/NY2013',#              '/Users/mcmahon/Repos/CitiBike/Stephanie/Data Files/NewYork/NY2014',#              '/Users/mcmahon/Repos/CitiBike/Stephanie/Data Files/NewYork/NY2015', #              '/Users/mcmahon/Repos/CitiBike/Stephanie/Data Files/NewYork/NY2016']# take in feather, concatenate into years, def make_year_sub(folder, newname, p):    os.chdir(folder)    data = {'start_time' : pd.Series([], dtype ='datetime64[ns]'),    'end_time' : pd.Series([], dtype ='datetime64[ns]'),    'duration' : pd.Series([], dtype ='int32'),    'start_station_name' : pd.Series([], dtype = 'str'),    'start_station_id' : pd.Series([], dtype = 'str'),    'end_station_name' : pd.Series([], dtype = 'str'),    'end_station_id' : pd.Series([], dtype = 'str'),    'start_lat' : pd.Series([], dtype = 'float64'),    'start_lng' : pd.Series([], dtype = 'float64'),     'end_lat' : pd.Series([], dtype = 'float64'),    'end_lng' : pd.Series([], dtype = 'float64'),     'user_type': pd.Series([], dtype = 'category')}        year_df = pd.DataFrame(data)        for file in os.listdir(folder):         if '-clean.feather' not in file:            continue        #read in clean feather file        month = pd.read_feather(file)                #take p sized sample from         month = month.sample(frac=p,                            random_state=42,                            axis = 0,                            ignore_index= True)                #concat temp with other months                year_df = pd.concat([year_df, month], axis = 0, ignore_index=True)        print(year_df.shape)                         feather.write_dataframe(year_df, newname)    return year_df  NY17_S25 = make_year_sub('/Users/mcmahon/Repos/CitiBike/Stephanie/Data Files/NewYork/NY2017', 'NY2017_sub25.feather', 0.25)NY18_S25 = make_year_sub('/Users/mcmahon/Repos/CitiBike/Stephanie/Data Files/NewYork/NY2018', 'NY2018_sub25.feather', 0.25)NY19_S25 = make_year_sub('/Users/mcmahon/Repos/CitiBike/Stephanie/Data Files/NewYork/NY2019', 'NY2019_sub25.feather', 0.25)NY20_S25 = make_year_sub('/Users/mcmahon/Repos/CitiBike/Stephanie/Data Files/NewYork/NY2020', 'NY2020_sub25.feather', 0.25)NY21_S25 = make_year_sub('/Users/mcmahon/Repos/CitiBike/Stephanie/Data Files/NewYork/NY2021', 'NY2021_sub25.feather', 0.25)# why is the year 2017 so wierd? ny17folder = '/Users/mcmahon/Repos/CitiBike/Stephanie/Data Files/NewYork/NY2017'os.chdir(ny17folder)for file in os.listdir(ny17folder):    if '-clean.feather' not in file:        continue    print(file)# clean 2021 from csv's because featherizing threw an error ny21folder = '/Users/mcmahon/Repos/CitiBike/Stephanie/Data Files/NewYork/NY2021'os.chdir(ny21folder)for file in os.listdir(ny21folder):    if '.csv' not in file:        continue    df = pd.read_csv(file)    df = clean_df(df)    newname = Path(file).stem +'-clean.feather'    feather.write_dataframe(df, newname)    print('Created cleaned file: ' + newname)        def combine_subs(folder, newname):    os.chdir(folder)    data = {'start_time' : pd.Series([], dtype ='datetime64[ns]'),    'end_time' : pd.Series([], dtype ='datetime64[ns]'),    'duration' : pd.Series([], dtype ='int32'),    'start_station_name' : pd.Series([], dtype = 'str'),    'start_station_id' : pd.Series([], dtype = 'str'),    'end_station_name' : pd.Series([], dtype = 'str'),    'end_station_id' : pd.Series([], dtype = 'str'),    'start_lat' : pd.Series([], dtype = 'float64'),    'start_lng' : pd.Series([], dtype = 'float64'),     'end_lat' : pd.Series([], dtype = 'float64'),    'end_lng' : pd.Series([], dtype = 'float64'),     'user_type': pd.Series([], dtype = 'category')}        tot_df = pd.DataFrame(data)        for file in os.listdir(folder):         if '.feather' not in file:            continue        # read in clean feather file        year = pd.read_feather(file)                # concat years together         tot_df = pd.concat([tot_df, year], axis = 0, ignore_index=True)        print(tot_df.shape)                         feather.write_dataframe(tot_df, newname)    return tot_df  subfolder = '/Users/mcmahon/Repos/CitiBike/Stephanie/Data Files/NewYork/Subsets'tot_subset = combine_subs(subfolder, 'CitiBikeSubset.feather')    